group_by( weather ) %>% summarise( cnt = sum( cnt ))
)
clear <-
data %>% filter( weather == 1 )
nrow( clear )
cloudy <-
data %>% filter( weather == 2 )
nrow( cloudy )
p4 <-
weather_data %>% filter( weather == "Clear" |  weather == "Cloudy") %>%
ggplot( aes( y = cnt , fill = as.factor(weather)))+
geom_boxplot()+
labs( title = "Boxplot Comparision" , y = "Count"
, fill = "Weather Type")+theme_bw()
weather_data %>% filter( weather == "Clear" | weather == "Cloudy") %>%
ggplot( aes( x = cnt  ,fill = weather ))+
geom_histogram( color = "grey"  , alpha = 0.7 )+theme_bw()
p5 <-
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
mutate( cnt = scale (cnt )) %>%
ggplot( aes( x = cnt , color = weather ))+
labs( x = "cnt" , title = "dencity plot of the cnt sample data")+
geom_density()+theme_bw()
p6 <-
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
ggplot( aes( x = cnt , color = weather ))+
stat_ecdf(pad = FALSE )+
labs( title = "Cumilative distribution of the cnt sample data")+
theme_bw()
p1 <- ( data %>%
filter( weather == 1) )$cnt
p2 <- ( data %>%
filter( weather == 2) )$cnt
r1 <- scale( p1 )
r2 <- scale(p2)
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear"  )
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" , main = "qqplot" )
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" , main = "qqplot for clear vs cloudy data" )
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" ,
main = "qqplot for clear vs cloudy data" ,
add.line = TRUE )
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" ,
main = "qqplot for clear vs cloudy data" )
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" ,
main = "qqplot for clear vs cloudy data" )
p7 <-
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" ,
main = "qqplot for clear vs cloudy data" )
weagher_data %>% filter( weather == "Cloudy" | weather == "Clear")%>%
ggplot( aes( ))
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
ggplot( aes( sample = cnt , color = as.factor( weather )))+
stat_qq()+stat_qq_line()+theme_bw()+
labs( color = "Weather Code" , title = "Color coded qq plot for 'cnt' variable" ,
x = "qunatile")
qqplot(p1 , p2  ,  xlab = "Clear" , ylab = "Cloudy", xlim = ( 0 , 9000))
abline( coef = c( .4  , 1   ))
ggarrange( p4 , p5 , p6 , p7 , nrow = 2 , ncol = 2 )
p5 <-
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
mutate( cnt = scale (cnt )) %>%
ggplot( aes( x = cnt , color = weather ))+
labs( x = "cnt" , title = "dencity plot")+
geom_density()+theme_bw()
p6 <-
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
ggplot( aes( x = cnt , color = weather ))+
stat_ecdf(pad = FALSE )+
labs( title = "Cumilative distribution")+
theme_bw()
p1 <- ( data %>%
filter( weather == 1) )$cnt
p2 <- ( data %>%
filter( weather == 2) )$cnt
r1 <- scale( p1 )
r2 <- scale(p2)
p7 <-
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" ,
main = "qqplot for clear vs cloudy data" )
qqline( y= p2 )
qplot( sample = cnt ,
data  = data ,
color = weather )+theme_bw()
weagher_data %>% filter( weather == "Cloudy" | weather == "Clear")%>%
ggplot( aes( ))
weather_data %>% select( weather ) %>%
ggplot( aes( x = weather )) +
geom_bar()+theme_bw()
data.frame(
weather_data %>%
select( weather , cnt ) %>%
group_by( weather ) %>% summarise( cnt = sum( cnt ))
)
clear <-
data %>% filter( weather == 1 )
nrow( clear )
cloudy <-
data %>% filter( weather == 2 )
nrow( cloudy )
p4 <-
weather_data %>% filter( weather == "Clear" |  weather == "Cloudy") %>%
ggplot( aes( y = cnt , fill = as.factor(weather)))+
geom_boxplot()+
labs( title = "Boxplot Comparision" , y = "Count"
, fill = "Weather Type")+theme_bw()
weather_data %>% filter( weather == "Clear" | weather == "Cloudy") %>%
ggplot( aes( x = cnt  ,fill = weather ))+
geom_histogram( color = "grey"  , alpha = 0.7 )+theme_bw()
p5 <-
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
mutate( cnt = scale (cnt )) %>%
ggplot( aes( x = cnt , color = weather ))+
labs( x = "cnt" , title = "dencity plot")+
geom_density()+theme_bw()
p6 <-
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
ggplot( aes( x = cnt , color = weather ))+
stat_ecdf(pad = FALSE )+
labs( title = "Cumilative distribution")+
theme_bw()
p1 <- ( data %>%
filter( weather == 1) )$cnt
p2 <- ( data %>%
filter( weather == 2) )$cnt
r1 <- scale( p1 )
r2 <- scale(p2)
p7 <-
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" ,
main = "qqplot for clear vs cloudy data" )
qqline( y= p2 )
qplot( sample = cnt ,
data  = data ,
color = weather )+theme_bw()
weagher_data %>% filter( weather == "Cloudy" | weather == "Clear")%>%
ggplot( aes( ))
weather_data %>% filter( weather == "Cloudy" | weather == "Clear")%>%
ggplot( aes( ))
p4 <-
weather_data %>% filter( weather == "Clear" |  weather == "Cloudy") %>%
ggplot( aes( y = cnt , fill = as.factor(weather)))+
geom_boxplot()+
labs( title = "Boxplot Comparision" , y = "Count"
, fill = "Weather Type")+theme_bw()
weather_data %>% filter( weather == "Clear" | weather == "Cloudy") %>%
ggplot( aes( x = cnt  ,fill = weather ))+
geom_histogram( color = "grey"  , alpha = 0.7 )+theme_bw()
p5 <-
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
mutate( cnt = scale (cnt )) %>%
ggplot( aes( x = cnt , color = weather ))+
labs( x = "cnt" , title = "dencity plot")+
geom_density()+theme_bw()
p6 <-
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
ggplot( aes( x = cnt , color = weather ))+
stat_ecdf(pad = FALSE )+
labs( title = "Cumilative distribution")+
theme_bw()
p1 <- ( data %>%
filter( weather == 1) )$cnt
p2 <- ( data %>%
filter( weather == 2) )$cnt
r1 <- scale( p1 )
r2 <- scale(p2)
p7 <-
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" ,
main = "qqplot for clear vs cloudy data" )
qqline( y= p2 )
qplot( sample = cnt ,
data  = data ,
color = weather )+theme_bw()
weather_data %>% filter( weather == "Cloudy" | weather == "Clear")%>%
ggplot( aes( ))
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
ggplot( aes( sample = cnt , color = as.factor( weather )))+
stat_qq()+stat_qq_line()+theme_bw()+
labs( color = "Weather Code" , title = "Color coded qq plot for 'cnt' variable" ,
x = "qunatile")
qqplot(p1 , p2  ,  xlab = "Clear" , ylab = "Cloudy", xlim = ( 0 , 9000))
ggarrange( p4 , p5 , p6 , p7 , nrow = 2 , ncol = 2 )
p7 <-
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" ,
main = "qqplot for clear vs cloudy data" )
p7 <-
qqplot( p1 , p2 , xlab = "Cloudy" , ylab = "Clear" ,
main = "qqplot for clear vs cloudy data" )
p7
data %>%
ggolot(  aes( x = data[ , weather == 1 ]$cnt ))+
geom_qq()
data %>%
ggplot(  aes( x = data[ , weather == 1 ]$cnt ))+
geom_qq()
data %>%
ggplot(  aes( x = data.frame(data[ , weather == 1 ])$cnt ))+
geom_qq()
data %>% filter( weather == 1 | weather == 2 ) %>%
group_by( weather ) %>%
ggplot( x = cnt )+
geom_qq()
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
ggplot( aes( sample = cnt , color = as.factor( weather )))+
stat_qq()+stat_qq_line()+theme_bw()+
labs( color = "Weather Code" , title = "Color coded qq plot for 'cnt' variable" ,
x = "qunatile")
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
ggplot( aes( sample = cnt , color = as.factor( weather )))+
stat_qq()+stat_qq_line()+theme_bw()
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
ggplot( aes( sample = cnt , color = as.factor( weather )))+
stat_qq()+stat_qq_line()+theme_bw()+
labs( color = "Weather Code" , title = "Color coded qq plot for 'cnt' variable" ,
x = "qunatile")
p7<-
weather_data %>% filter( weather == "Cloudy" | weather == "Clear") %>%
ggplot( aes( sample = cnt , color = as.factor( weather )))+
stat_qq()+stat_qq_line()+theme_bw()+
labs( color = "Weather Code" , title = "Color coded qq plot for 'cnt' variable" ,
x = "qunatile")
ggarrange( p4 , p5 , p6 , p7 , nrow = 2 , ncol = 2 )
data <- read.csv("data.csv")
data <- read.csv("data.csv")
data <- read.csv("data.csv")
setwd("~")
setwd("~")
data <- read.csv("data.csv")
data <- read.csv("~/data.csv")
data
plot( data$time , data$dist )
model <- lm( data$dist ~ data$time )
summary(model)
model <- lm( data$dist ~ data$time )
summary(model)
abline( model )
data <- read.csv("~/data.csv")
data
plot( data$time , data$dist )
model <- lm( data$dist ~ data$time )
summary(model)
abline( model )
data <- read.csv("~/data.csv")
data
plot( data$time , data$dist )
model <- lm( data$dist ~ data$time )
summary(model)
abline( model )
data <- read.csv("~/data.csv")
data
plot( data$time , data$dist )
model <- lm( data$dist ~ data$time )
summary(model)
abline( model )
data$dist = 2*data$dist
plot( data$time , data$dist )
model <- lm( data$dist ~ data$time )
summary(model)
abline( model )
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% inv( t(X)%*%X ) %*% t(X)
setwd("~/Library/CloudStorage/OneDrive-IITKanpur/Documents/IITKANPUR/SEM5/MTH441/MTH441_lab/LAB2")
~/data.csv
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% inv( t(X)%*%X ) %*% t(X)
library(MASS)
library(Matrix)
library(matlib)
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% inv( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
###p6###
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% inv( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% solve( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% solve( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
?Inverse
PX1 <- X %*% Inverse( t(X)%*%X ) %*% t(X)
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% Inverse( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% solve( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% solve( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% solve( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% solve( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
###p6###
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% inv( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
X <- matrix( round( runif( 40 , 0 , 100)) , nrow = 8 , ncol = 5 )
PX1 <- X %*% solve( t(X)%*%X ) %*% t(X)
PX2 <- diag(8) - PX1
Y <-  mvrnorm( n = 5000 , mu = rep( 0 , 8 )  , Sigma = diag( 8 ) )
f2 <- R(PX2)
u1 <- diag( Y%*%PX1%*%t(Y) )/R(PX1)
u2 <- diag( Y%*%PX2%*%t(Y) )/R(PX2)
f <- u2*( u1^(-1) )
hist( f )
d1 <- 3
d2 <- 5
tmean <- d2/( d2 -2 )
tvar <- ( 2 * (d2^2) * ( d1 + d2 - 2 ))/( d1* (d2-2)^2 * (d2 - 4))
amean <- mean( f )
avar <- sd(f)^2
print( amean )
print( tmean )
print( avar )
print( tvar )
print(((amean - tmean)/tmean)*100)
print(((avar-tvar)/tvar)*100)
print( f2 )
